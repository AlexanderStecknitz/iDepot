[versions]
springBootVersion = "3.1.5"
sonarqubePluginVersion = "4.4.1.3373"
springDocOpenApiStarterWebmvcUiVersion = "2.2.0"
lombokVersion = "1.18.30"
postgresqlVersion = "42.6.0"
mapstructVersion = "1.5.5.Final"
testcontainerVersion = "1.19.1"
nimbusdsVersion = "9.35"
nettyResolverDnsNativeMacosVersion = "4.1.99.Final"


[libraries]
springBootStarter = { module = "org.springframework.boot:spring-boot-starter-web" }
springDataJpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa" }
springBootStarterReactorNetty = { module = "org.springframework.boot:spring-boot-starter-reactor-netty" }
springBootStarterSecurity = { module = "org.springframework.boot:spring-boot-starter-security" }
springBootStarterWebflux = { module = "org.springframework.boot:spring-boot-starter-webflux" }
springBootStarterTest = { module = "org.springframework.boot:spring-boot-starter-test" }
springBootStarterSecurityTest = { module = "org.springframework.security:spring-security-test" }
springBootStarterValidation = { module = "org.springframework.boot:spring-boot-starter-validation" }
springDocOpenApiStarterWebmvcUi = { module = "org.springdoc:springdoc-openapi-starter-webmvc-ui", version.ref = "springDocOpenApiStarterWebmvcUiVersion" }
testcontainer = { module = "org.testcontainers:testcontainers", version.ref = "testcontainerVersion" }
testcontainerPostgres = { module = "org.testcontainers:postgresql", version.ref = "testcontainerVersion" }
testcontainerJupiter = { module = "org.testcontainers:junit-jupiter", version.ref = "testcontainerVersion" }
lombok = { module = "org.projectlombok:lombok", version.ref = "lombokVersion" }
liquibaseCore = { module = "org.liquibase:liquibase-core" }
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgresqlVersion" }
mapstructProcessor = { module = "org.mapstruct:mapstruct-processor", version.ref = "mapstructVersion" }
mapstruct = { module = "org.mapstruct:mapstruct", version.ref = "mapstructVersion" }
nimbusds = { module = "com.nimbusds:nimbus-jose-jwt", version.ref = "nimbusdsVersion" }
nettyResolverDnsNativeMacos = { module = "io.netty:netty-resolver-dns-native-macos", version.ref = "nettyResolverDnsNativeMacosVersion" }
oauth2Jose = { module = "org.springframework.security:spring-security-oauth2-jose" }
oauth2Server = { module = "org.springframework.security:spring-security-oauth2-resource-server" }

[plugins]
springBootPlugin = { id = "org.springframework.boot", version.ref = "springBootVersion" }
sonarqubePlugin = { id = "org.sonarqube", version.ref = "sonarqubePluginVersion" }